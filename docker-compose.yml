version: '3.8'

services:
  # Backend API
  backend:
    build: ./backend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/fin_agentix
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend:/app
      - /app/node_modules
    
  # Frontend React App
  frontend:
    build: ./frontend
    ports:
      - "3001:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:3000
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
  
  # ML Services
  ml-services:
    build: ./ml-services
    ports:
      - "8000:8000"
    environment:
      - MODEL_PATH=/models
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/fin_agentix
    volumes:
      - ./ml-services:/app
      - ./data/models:/models
    depends_on:
      - postgres
  
  # PostgreSQL Database
  postgres:
    image: postgres:15
    environment:
      - POSTGRES_DB=fin_agentix
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/database/migrations:/docker-entrypoint-initdb.d
  
  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
  
  # MongoDB for Documents
  mongodb:
    image: mongo:6
    environment:
      - MONGO_INITDB_DATABASE=fin_agentix_docs
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
  
  # Elasticsearch for Search
  elasticsearch:
    image: elasticsearch:8.11.0
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data

volumes:
  postgres_data:
  redis_data:
  mongodb_data:
  elasticsearch_data:
